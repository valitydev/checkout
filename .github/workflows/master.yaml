name: Master
on:
    push:
        branches:
            - 'master'
            - 'main'
env:
    REGISTRY: ghcr.io
    IMAGE_NAME: ${{ github.repository }}
jobs:
    build:
        name: Build
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  submodules: recursive
            - name: Init
              uses: ./.github/actions/init
            - name: Build
              run: npm run build
            - name: Set checkout version
              uses: jossef/action-set-json-field@v2
              with:
                  file: ./dist/v1/env.json
                  field: version
                  value: ${{ github.sha }}
            - name: Deploy image
              uses: valitydev/action-deploy-docker@v1.0.16
              with:
                  registry-username: ${{ github.actor }}
                  registry-access-token: ${{ secrets.GITHUB_TOKEN }}
                  dockerfile-path: .
              env:
                  ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            - name: set config
              run: |
                  printf "$APP_ENV_FILE" > dist/v1/appConfig.json
              shell: bash
              env:
                  APP_ENV_FILE: ${{secrets.APP_CONFIG_CF}}
            - name: Publish to CF Pages
              uses: cloudflare/pages-action@1
              with:
                  apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
                  accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
                  projectName: 'payform'
                  directory: 'dist'
                  gitHubToken: ${{ secrets.GITHUB_TOKEN }}
                  branch: master
            - name: Create Sentry release
              uses: getsentry/action-release@v1
              env:
                  SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
                  SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
                  SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
              with:
                  environment: 'production'
                  sourcemaps: './dist'
